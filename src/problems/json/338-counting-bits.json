{
  "id": 338,
  "title": "Counting Bits",
  "list": ["neetcode150"],
  "category": "Bit Manipulation",
  "difficulty": "Easy",
  "description": "Given an integer n, return an array ans of length n + 1 such that for each i (0 <= i <= n), ans[i] is the number of 1's in the binary representation of i.",
  "constraints": ["0 <= n <= 10^5"],
  "testCases": [
    {
      "input": { "n": 2 },
      "output": [0, 1, 1],
      "explanation": "0:0b0, 1:0b1, 2:0b10"
    },
    {
      "input": { "n": 5 },
      "output": [0, 1, 1, 2, 1, 2],
      "explanation": "Counts of 1s for 0 to 5."
    }
  ],
  "solution": {
    "code": "def countBits(n: int) -> list[int]:\n    ans = [0] * (n + 1)\n    for i in range(1, n + 1):\n        ans[i] = ans[i >> 1] + (i & 1)\n    return ans",
    "explanation": "For each i, the number of 1s is the number in i//2 plus 1 if i is odd. This uses DP. Time complexity is O(n)."
  }
}
