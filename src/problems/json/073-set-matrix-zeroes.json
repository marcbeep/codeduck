{
  "id": 73,
  "title": "Set Matrix Zeroes",
  "list": ["neetcode150"],
  "category": "Math & Geometry",
  "difficulty": "Medium",
  "description": "Given an m x n integer matrix matrix, if an element is 0, set its entire row and column to 0's.\n\nYou must do it in place.",
  "constraints": [
    "m == matrix.length",
    "n == matrix[i].length",
    "1 <= m, n <= 200",
    "-231 <= matrix[i][j] <= 231 - 1"
  ],
  "testCases": [
    {
      "input": {
        "matrix": [
          [1, 1, 1],
          [1, 0, 1],
          [1, 1, 1]
        ]
      },
      "output": [
        [1, 0, 1],
        [0, 0, 0],
        [1, 0, 1]
      ],
      "explanation": "Set the entire row and column containing 0 to 0."
    },
    {
      "input": {
        "matrix": [
          [0, 1, 2, 0],
          [3, 4, 5, 2],
          [1, 3, 1, 5]
        ]
      },
      "output": [
        [0, 0, 0, 0],
        [0, 4, 5, 0],
        [0, 3, 1, 0]
      ],
      "explanation": "Set the entire first row and first column to 0."
    }
  ],
  "solution": {
    "code": "def setZeroes(matrix: list[list[int]]) -> None:\n    m, n = len(matrix), len(matrix[0])\n    first_row_has_zero = False\n    first_col_has_zero = False\n    \n    # Check if first row has any zero\n    for j in range(n):\n        if matrix[0][j] == 0:\n            first_row_has_zero = True\n            break\n    \n    # Check if first column has any zero\n    for i in range(m):\n        if matrix[i][0] == 0:\n            first_col_has_zero = True\n            break\n    \n    # Use first row and column as markers\n    for i in range(1, m):\n        for j in range(1, n):\n            if matrix[i][j] == 0:\n                matrix[i][0] = 0\n                matrix[0][j] = 0\n    \n    # Set zeros based on markers\n    for i in range(1, m):\n        for j in range(1, n):\n            if matrix[i][0] == 0 or matrix[0][j] == 0:\n                matrix[i][j] = 0\n    \n    # Set first row to zero if needed\n    if first_row_has_zero:\n        for j in range(n):\n            matrix[0][j] = 0\n    \n    # Set first column to zero if needed\n    if first_col_has_zero:\n        for i in range(m):\n            matrix[i][0] = 0",
    "explanation": "Use first row and column as markers to avoid extra space. Check if they originally have zeros, mark other zeros, then set zeros based on markers. Time O(m*n), space O(1)."
  }
}
