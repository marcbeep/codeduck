{
  "id": 371,
  "title": "Sum of Two Integers",
  "list": ["neetcode150"],
  "category": "Bit Manipulation",
  "difficulty": "Medium",
  "description": "Given two integers a and b, return the sum of the two integers without using the operators + and -.",
  "constraints": ["-2^31 <= a, b <= 2^31 - 1"],
  "testCases": [
    { "input": { "a": 1, "b": 2 }, "output": 3, "explanation": "1 + 2 = 3." },
    { "input": { "a": 2, "b": 3 }, "output": 5, "explanation": "2 + 3 = 5." }
  ],
  "solution": {
    "code": "def getSum(a: int, b: int) -> int:\n    MASK = 0xFFFFFFFF\n    MAX = 0x7FFFFFFF\n    while b != 0:\n        a, b = (a ^ b) & MASK, ((a & b) << 1) & MASK\n    return a if a <= MAX else ~(a ^ MASK)",
    "explanation": "We use bitwise XOR for addition and AND+shift for carry. Loop until no carry. Handles negative numbers with masking. Time complexity is O(1)."
  }
}
